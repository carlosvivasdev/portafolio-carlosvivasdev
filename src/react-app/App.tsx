// src/App.tsx
import gifMain from "./assets/output-onlinegiftools.gif"
import "./App.css";
import { useRef, useState } from "react";
import { Background } from "./components/background/background";
import { Btn_main } from "./components/button/btn";

function App() {
  const frases = [
    "SÃ­, estoy haciendo la pÃ¡gina... pero me distraje viendo memes.",
    "Tranquilo, ya casi la termino... faltan solo como 843 cosas.",
    "No estÃ¡ rota, simplemente aÃºn no la he terminado (algun dia).",
    "Coming soonâ€¦ probablemente. Tal vez. AlgÃºn dÃ­a.",
    "Mantenimiento... o procrastinaciÃ³n con estilo.",
    "Paciencia... el cÃ³digo no se escribe solo (aunque deberÃ­a).",
    "Estos mensajes fueron aprobados por Carlos.",
    "DevOps nivel: mÃ¡s cafÃ© que paciencia.",
    "Si ves esto, es culpa del universo, no mÃ­a.",
    "Estoy ocupado mirando fijamente el monitor esperando que se arregle solo.",
    "Â¿DocumentaciÃ³n? Â¿QuÃ© es eso? Â¿Se come?",
    "Esto iba a ser una pÃ¡gina Ã©pica, pero me ganÃ³ la pereza.",
    "Si estÃ¡s leyendo esto, significa que aÃºn no terminÃ©. QuÃ© sorpresa.",
    "Esta pÃ¡gina aÃºn no existe... como mi motivaciÃ³n.",
    "Todo iba bien, hasta que dije: â€˜lo hago maÃ±anaâ€™.",
    "404 ganas no encontradas.",
    "Estoy haciendo pruebas... de paciencia.",
    "Progreso del proyecto: 1% hecho, 99% memes.",
    "Haz como yo: no esperes nada y no te decepcionarÃ¡s.",
    "La web se estÃ¡ cocinando... en fuego lento, como todo lo bueno (segÃºn yo).",
    "Â¿Por quÃ© funciona? â€“ No lo sÃ©.",
    "Entre un â€˜npm installâ€™ y otro, me tomo otro cafÃ©.",
    "Este deploy fue mÃ¡s lento que un pit stop de Ferrari ðŸ˜‚.",
    "Carlos y Ferrari tienen algo en comÃºn: los dos dicen que todo va bien... hasta que no.",
    "Mis commits son como las estrategias de Ferrari: suenan bien al principio... luego lloras.",
    "Disponible pronto. O no. Â¿QuiÃ©n sabe?",
    "Mejor esto que una pantalla en blanco. Â¿No?",
    "Se suponÃ­a que ya iba a estar lista. Se suponÃ­a...",
    "Â¡Gracias por tu interÃ©s!",
  ];

  const [fraseActual, setFraseActual] = useState(frases[0]);
  const frasesRestantes = useRef([...frases.filter(f => f !== frases[0])]);

  const cambiarFrase = () => {
    // Si ya se usaron todas, reinicia
    if (frasesRestantes.current.length === 0) {
      frasesRestantes.current = [...frases.filter(f => f !== fraseActual)];
    }

    const randomIndex = Math.floor(Math.random() * frasesRestantes.current.length);
    const nuevaFrase = frasesRestantes.current.splice(randomIndex, 1)[0];

    setFraseActual(nuevaFrase);
  };

  return (
    <>
      <Background />
      <h2>PROXIMAMENTE</h2>
      <img src={gifMain} alt="Cargando..." />
      <p> {fraseActual} </p>
      <Btn_main cambiarFrase={cambiarFrase} />
    </>
  );
}

export default App;
